<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:StyledApp.Theme">

    <!-- Button -->
    <Style TargetType="Button">
        <!--<Setter Property="Foreground" Value="{StaticResource TextColor}" />-->
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Margin" Value="0,5,5,5"/>
        <Setter Property="Padding" Value="5,5" />
        <Setter Property="BorderBrush" Value="{StaticResource PrimaryBrush}" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Grid x:Name="Button_Normal" SnapsToDevicePixels="true">
                        <VisualStateManager.VisualStateGroups>
                            <VisualStateGroup x:Name="FocusStates">
                                <VisualState x:Name="Unfocused" />
                                <VisualState x:Name="Focused"/>
                            </VisualStateGroup>
                            <VisualStateGroup x:Name="CommonStates">
                                <VisualStateGroup.Transitions>
                                    <VisualTransition GeneratedDuration="00:00:00.3" />
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00" To="Pressed" />
                                    <VisualTransition From="MouseOver" GeneratedDuration="00:00:00.1" To="Normal" />
                                </VisualStateGroup.Transitions>
                                <VisualState x:Name="MouseOver">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.4" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Normal" />
                                <VisualState x:Name="Pressed">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.6" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="Highlight" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                                <VisualState x:Name="Disabled">
                                    <Storyboard>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="contentPresenter" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.5" />
                                        </DoubleAnimationUsingKeyFrames>
                                        <DoubleAnimationUsingKeyFrames Duration="00:00:00.001" Storyboard.TargetName="Background" Storyboard.TargetProperty="(UIElement.Opacity)">
                                            <SplineDoubleKeyFrame KeyTime="0" Value="0.2" />
                                        </DoubleAnimationUsingKeyFrames>
                                    </Storyboard>
                                </VisualState>
                            </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="Transparent" BorderThickness="0,0,0,3" CornerRadius="3" x:Name="Background" Opacity="1"/>
                        <Border BorderBrush="{TemplateBinding BorderBrush}" Background="{TemplateBinding Background}" BorderThickness="0,0,0,3" CornerRadius="3" x:Name="Highlight" Opacity="0.2"/>
                        <ContentPresenter x:Name="contentPresenter" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}" Margin="{TemplateBinding Padding}"/>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsDefault" Value="True">
                            <Setter TargetName="Background" Property="BorderThickness" Value="1,1,1,3"/>
                            <Setter TargetName="Highlight" Property="BorderThickness" Value="1,1,1,3"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="SuccessButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource SuccessBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SuccessBrush}" />
    </Style>

    <Style x:Key="WarningButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource WarningBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource WarningBrush}" />
    </Style>

    <Style x:Key="PrimaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource PrimaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryBrush}" />
    </Style>

    <Style x:Key="InfoButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource InfoBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource InfoBrush}" />
    </Style>

    <Style x:Key="LightButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource LightBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource LightBrush}" />
    </Style>

    <Style x:Key="DarkButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource DarkBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource DarkBrush}" />
    </Style>

    <Style x:Key="SecondaryButton" TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
        <Setter Property="Background" Value="{DynamicResource SecondaryBrush}" />
        <Setter Property="BorderBrush" Value="{DynamicResource SecondaryBrush}" />
    </Style>

    <Style x:Key="ApplyIconButton" TargetType="Button" BasedOn="{StaticResource SuccessButton}">
        <Style.Resources>
            <DataTemplate x:Key="localStyle">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="18" Height="18" Fill="Gray" Margin="0,0,5,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{DynamicResource ApplyOutlineIcon}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{TemplateBinding Content}"/>
                </StackPanel>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="ContentTemplate" Value="{StaticResource localStyle}" />
    </Style>

    <Style x:Key="CloseIconButton" TargetType="Button" BasedOn="{StaticResource WarningButton}">
        <Style.Resources>
            <DataTemplate x:Key="localStyle">
                <StackPanel Orientation="Horizontal">
                    <Rectangle Width="18" Height="18" Fill="Gray" Margin="0,0,5,0">
                        <Rectangle.OpacityMask>
                            <VisualBrush Stretch="Uniform" Visual="{DynamicResource CloseOutlineIcon}" />
                        </Rectangle.OpacityMask>
                    </Rectangle>
                    <Label Content="{TemplateBinding Content}"/>
                </StackPanel>
            </DataTemplate>
        </Style.Resources>
        <Setter Property="ContentTemplate" Value="{StaticResource localStyle}" />
    </Style>

</ResourceDictionary>